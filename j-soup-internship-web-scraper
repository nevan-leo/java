<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath/> <!-- Lookup parent from repository -->
    </parent>

    <groupId>com.nevanleo.scraper</groupId>
    <artifactId>internship-scraper</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Internship Scraper</name>
    <description>A Spring Boot project for scraping internships</description>
    <packaging>jar</packaging>

    <properties>
        <java.version>23</java.version>
    </properties>

    <dependencies>
        <!-- Core Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- Spring Boot Starter Web for REST APIs -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot DevTools for Hot Reload (Optional) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Jsoup for Web Scraping -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.15.4</version>
        </dependency>

        <!-- Spring Boot Starter Test for Unit Tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>

package com.nevanleo.scraper;

public class Internship {
    private String title;
    private String company;
    private String location;

    public Internship(String title, String company, String location) {
        this.title = title;
        this.company = company;
        this.location = location;
    }

    // Getters and Setters
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Override
    public String toString() {
        return "Internship{" +
                "title='" + title + '\'' +
                ", company='" + company + '\'' +
                ", location='" + location + '\'' +
                '}';
    }
}

package com.nevanleo.scraper;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class InternshipScraperApplication {
    public static void main(String[] args) {
        SpringApplication.run(InternshipScraperApplication.class, args);
    }
}

package com.nevanleo.scraper;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Service
public class InternshipScraperService {
    private static final Logger logger = LoggerFactory.getLogger(InternshipScraperService.class);

    private static final int MAX_RETRIES = 3;
    private static final int RETRY_DELAY = 2000; // 2 seconds

    public List<Internship> scrapeInternships() {
        String url = "https://example.com/internships"; // Replace with the actual URL
        int attempt = 0;
        Exception lastException = null;

        while (attempt < MAX_RETRIES) {
            try {
                logger.info("Attempting to scrape internships (Attempt {}/{})", attempt + 1, MAX_RETRIES);
                Document doc = Jsoup.connect(url)
                        .timeout(10000) // 10 seconds timeout
                        .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36")
                        .get();

                List<Internship> internships = new ArrayList<>();
                Elements listings = doc.select(".job-listing"); // Adjust CSS selector based on website structure

                for (Element listing : listings) {
                    String title = listing.select(".job-title").text();
                    String company = listing.select(".company-name").text();
                    String location = listing.select(".location").text();

                    internships.add(new Internship(title, company, location));
                }

                logger.info("Scraping successful, found {} internships", internships.size());
                return internships;
            } catch (Exception e) {
                lastException = e;
                logger.error("Error during scraping: {}", e.getMessage());
                attempt++;
                try {
                    Thread.sleep(RETRY_DELAY);
                } catch (InterruptedException ie) {
                    logger.error("Retry delay interrupted: {}", ie.getMessage());
                    Thread.currentThread().interrupt();
                }
            }
        }

        logger.error("Failed to scrape internships after {} attempts", MAX_RETRIES, lastException);
        throw new RuntimeException("Failed to scrape internships", lastException);
    }
}

package com.nevanleo.scraper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/internships")
public class InternshipController {

    @Autowired
    private InternshipScraperService scraperService;

    @GetMapping("/scrape")
    public List<Internship> scrapeInternships() throws Exception {
        return scraperService.scrapeInternships();
    }
}

